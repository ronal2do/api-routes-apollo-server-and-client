{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// ${TM_FILENAME_BASE}, $2 for tab stops, $0 for the final cursor position, and $${TM_FILENAME_BASE}:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('${TM_FILENAME_BASE}');",
	// 		"$2"
	// 	],>
	// 	"description": "Log output to console"
	// }
  "nxcomp": {
    "prefix": "nxct",
    "description": "next component with use client tag",
    "body": [
      "'use client';",
      "",
      "interface ${TM_FILENAME_BASE}Props {}",
      "",
      "export const ${TM_FILENAME_BASE}: React.FC<${TM_FILENAME_BASE}Props> = () => {",
      "  return (",
      "    <div>",
      "      ${TM_FILENAME_BASE}",
      "    </div>",
      "  )",
      "};"
    ]
  },
  "nxchildcomp": {
    "prefix": "nxcct",
    "description": "next component with use client tag",
    "body": [
      "'use client';",
      "",
      "import { PropsWithChildren } from \"react\"",
      "",
      "interface ${TM_FILENAME_BASE}Props {}",
      "",
      "export const ${TM_FILENAME_BASE}: React.FC<PropsWithChildren<${TM_FILENAME_BASE}Props>> = ({ children }) => {",
      "  return (",
      "    <div>",
      "      {children}",
      "    </div>",
      "  )",
      "};"
    ]
  },
  "nxzustand": {
    "prefix": "nxzuhook",
    "description": "zustand hook",
    "body": [
      "import { create } from 'zustand'",
      "",
      "interface ${2}Store {",
      "  isOpen: boolean;",
      "  onOpen: () => void;",
      "}",
      "",
      "export const ${TM_FILENAME_BASE} = create<${2}Store>((set) => ({",
      "  isOpen: false,",
      "  onOpen: () => set({ isOpen: true })",
      "}))"
    ]
  }
}